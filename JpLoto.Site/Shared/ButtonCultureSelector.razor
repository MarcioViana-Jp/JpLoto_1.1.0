@using System.Text;
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject IStringLocalizer<CultureResource> CultureLocalizer
@inject HttpClient http

<div class="culture-selector align-items-center">
    <div class="d-flex flex-row align-items-center">
        <i class="oi oi-globe"></i>
        <select id="culture-select" @bind="Culture">
            @foreach (var culture in LocalizationSettings.SupportedCultures)
            {
                <option value="@culture">@CultureLocalizer[culture.Name]</option>
            }
        </select>
    </div>
</div>

@code
{
    private string flagIconPath(string culture) 
    {  
        string flagPath = "site_images/country-lags/flag-" + culture + ".png";
        return flagPath;
    }

    protected override async Task OnInitializedAsync()
    {
        Culture = CultureInfo.CurrentCulture;
        await http.GetAsync($"Culture/SetServerCulture/{Culture.Name}");
    }

    private CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set
        {
            if (CultureInfo.CurrentCulture != value)
            {
                var uri = new Uri(Navigation.Uri)
                    .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
                var cultureEscaped = Uri.EscapeDataString(value.Name);
                var uriEscaped = Uri.EscapeDataString(uri);

                var js = (IJSInProcessRuntime)JSRuntime;
                js.InvokeVoid("blazorCulture.set", cultureEscaped);

                Navigation.NavigateTo(
                    $"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}",
                    forceLoad: true);
            }
        }
    }
}