<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account2FLoginRequired" xml:space="preserve">
    <value>2 Factors login required.</value>
  </data>
  <data name="AccountBlocked" xml:space="preserve">
    <value>This account is blocked.</value>
  </data>
  <data name="AccountEmailConfirmationRequired" xml:space="preserve">
    <value>Please, verify your e-mail and click on the given link to confirm your account.</value>
  </data>
  <data name="AccountLoginRequired" xml:space="preserve">
    <value>This operation requires login.</value>
  </data>
  <data name="AccountNotAllowed" xml:space="preserve">
    <value>Not allowed for this user.</value>
  </data>
  <data name="AccountUserAlreadyExists" xml:space="preserve">
    <value>User already exists.</value>
  </data>
  <data name="AccountUserOrPasswordInvalid" xml:space="preserve">
    <value>Invalid user and/or password.</value>
  </data>
  <data name="AlreadyRegistered" xml:space="preserve">
    <value>Already registered</value>
  </data>
  <data name="ClickHere" xml:space="preserve">
    <value>Click here</value>
  </data>
  <data name="ClickHereToReturn" xml:space="preserve">
    <value>Click here to return</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="EditProfile" xml:space="preserve">
    <value>Edit profile</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="IsPersistent" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="LogoutLine1" xml:space="preserve">
    <value>You're about to leave JP Loto.</value>
  </data>
  <data name="LogoutLine2-1" xml:space="preserve">
    <value>Click here</value>
  </data>
  <data name="LogoutLine2-2" xml:space="preserve">
    <value> to logout </value>
  </data>
  <data name="LogoutLine2-3" xml:space="preserve">
    <value>or click here</value>
  </data>
  <data name="LogoutLine2-4" xml:space="preserve">
    <value> to return.</value>
  </data>
  <data name="LogoutPageTitle" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="NoRecordsFound" xml:space="preserve">
    <value>No records found.</value>
  </data>
  <data name="NotRegistered" xml:space="preserve">
    <value>Not registered yet</value>
  </data>
  <data name="NoUserLogged" xml:space="preserve">
    <value>No user logged in.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordChangeOk" xml:space="preserve">
    <value>Password updated successfully.</value>
  </data>
  <data name="ProfileInformation" xml:space="preserve">
    <value>Profile information</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>New user</value>
  </data>
  <data name="RegisterForFree" xml:space="preserve">
    <value>Sign up for free</value>
  </data>
  <data name="RegistrationOk" xml:space="preserve">
    <value>Registration succeeded.</value>
  </data>
  <data name="ResendConfirmationEmail" xml:space="preserve">
    <value>Resend confirmation email</value>
  </data>
  <data name="ServerError" xml:space="preserve">
    <value>Server error. Please try again later.</value>
  </data>
  <data name="TermsAndConditionsAgreement" xml:space="preserve">
    <value>I agree the terms and conditions of this website</value>
  </data>
  <data name="UpdateOk" xml:space="preserve">
    <value>Uptade succeeded.</value>
  </data>
  <data name="UpdatePassword" xml:space="preserve">
    <value>Update password</value>
  </data>
  <data name="UserDetailNotSet" xml:space="preserve">
    <value>Your profile has not been defined, yet.</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User not found.</value>
  </data>
  <data name="UserProfileSet" xml:space="preserve">
    <value>You can click on &lt;EDIT PROFILE&gt; to fill in your personal details.</value>
  </data>
  <data name="UserUpdate" xml:space="preserve">
    <value>Update user</value>
  </data>
  <data name="WelcomeLine1" xml:space="preserve">
    <value>Welcome!</value>
  </data>
  <data name="WelcomeLine2" xml:space="preserve">
    <value>Thans for using JP Loto.</value>
  </data>
  <data name="WelcomeLine3" xml:space="preserve">
    <value>JP Loto is an application to generate numerical combinations for Mini Loto, Loto6 and Loto7.</value>
  </data>
  <data name="WelcomeLine4" xml:space="preserve">
    <value>From a set of numbers chosen by the user, JP Loto creates all the possible combinations</value>
  </data>
  <data name="WelcomeLine5" xml:space="preserve">
    <value>of these numbers generating games for each of the aforementioned lottery modalities.</value>
  </data>
  <data name="WelcomeLine6" xml:space="preserve">
    <value>These combinations can be filtered, saved to disk, and can also be printed.</value>
  </data>
  <data name="WrongPassword" xml:space="preserve">
    <value>Invalid password.</value>
  </data>
  <data name="_CHANGE_PASSWORD_TITLE" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="_LOGIN_TITLE" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="_LOGOUT_TITLE" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="_REGISTER_TITLE" xml:space="preserve">
    <value>User Register</value>
  </data>
  <data name="_UPDATE_TITLE" xml:space="preserve">
    <value>Update User</value>
  </data>
</root>