@page "/register"
@inject IAccountService accountService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Register</PageTitle>

<main class="main-content  mt-0">
    <section>
        <div class="page-header align-items-start min-vh-80" style="background-image: url('site_images/backgrounds/lottery-3846567_640.webp.jpg');">
            <span class="mask bg-gradient-dark opacity-6"></span>
            <div class="container my-auto">
                <div class="row">
                    <div class="col-lg-4 col-md-8 col-12 mx-auto">
                        <div class="card z-index-0 fadeIn3 fadeInBottom">
                            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                                <div class="bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1">
                                    <h5 class="text-white font-weight-bolder text-center mt-2 mb-0">Register</h5>
                                </div>
                            </div>
                            <div class="card-body">
                                <EditForm Model="registerRequest" OnValidSubmit="HandleRegister">
                                    <DataAnnotationsValidator />
                                    <div class="input-group input-group-outline mt-3">
                                        <label for="email" class="form-label text-xs">Email</label>
                                        <InputText id="email" type="email" style="text-align:center;" @bind-Value="registerRequest.Email" class="form-control my-2" />
                                    </div>
                                    <ValidationMessage For="@(() => registerRequest.Email)" class="text-xs text-danger" />
                                    <div class="input-group input-group-outline mt-3">
                                        <label for="senha" class="form-label text-xs">Password</label>
                                        <InputText id="senha" type="password" style="text-align:center;" @bind-Value="registerRequest.Senha" class="form-control my-2" />
                                    </div>
                                    <ValidationMessage For="@(() => registerRequest.Senha)" class="text-xs text-danger" />
                                    <div class="input-group input-group-outline mt-3">
                                        <label for="senhaConfirmacao" class="form-label text-xs">Password</label>
                                        <InputText id="senhaConfirmacao" type="password" style="text-align:center;" @bind-Value="registerRequest.SenhaConfirmacao" class="form-control my-2" />
                                    </div>
                                    <ValidationMessage For="@(() => registerRequest.SenhaConfirmacao)" class="text-xs text-danger" />
                                    <div class="form-check form-check-info text-start mt-3 ps-0">
                                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" checked>
                                        <label class="form-check-label" for="flexCheckDefault">
                                            I agree the <a href="javascript:;" class="text-dark font-weight-bolder">Terms and Conditions</a>
                                        </label>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-lg bg-gradient-primary btn-lg w-100 mt-4 mb-0">Sign Up</button>
                                    </div>
                                    <p class="mt-4 text-sm text-center">
                                        Don't have an account?
                                        <a href="register2" class="text-primary text-gradient font-weight-bold">Sign up</a>
                                        <br />
                                        Or
                                        <a href="@returnUrl" class="text-primary text-gradient font-weight-bold">click here</a>
                                        to return
                                    </p>
                                </EditForm>
                                <div class="mt-2">
                                    @if (errorMessages.Count > 0)
                                    {
                                        foreach (var msg in errorMessages)
                                        {
                                            <label class="text-danger text-xs">@msg</label>
                                            <br />
                                        }
                                    }
                                </div>
                            </div> <!-- Card body-->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

@code {
    private RegisterRequestApplication registerRequest = new();
    private List<string> errorMessages = new();
    private string returnUrl = string.Empty;

    protected override void OnInitialized()
    {
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("returnUrl", out var url))
        {
            returnUrl = url;
        }
    }

    private async Task HandleRegister()
    {
        errorMessages = new();

        var response = await accountService.Register(registerRequest);
        if (response.Sucesso)
            navigationManager.NavigateTo(returnUrl);

        errorMessages = response.Erros;
    }

}
